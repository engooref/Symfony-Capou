{% extends 'base.html.twig' %}
{% block encoding %}<meta charset="UTF-8">{% endblock %}

{% block body %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/css/ol.css" type="text/css">
<link rel="stylesheet" href="./css/control.css">


<div class="container-fluid">
    <div class="row">
        <div class="col-md-6 left">
        	<div id="map" class="map"></div>
            <div id="popup" class="ol-popup">
            	<a href="#" id="popup-closer" class="ol-popup-closer"></a>
        	    <div id="popup-content"></div>
			</div>
        </div>
        <div class="col-md-6 right">
        	<button type="button" class="btn btn-light" id="returnButton">Exit</button>
        	<button type="button" class="btn btn-light" id="saveButton">Save</button>
        	
        	<table class="table table-dark">
            	<tr>
              		<th scope="row">Identifiant : </th>
              		<td>Larry</td>
            	</tr>
            	<tr>
              		<th scope="row">Coordonnées GPS : </th>
              		<td>Larry</td>
            	</tr>
            	<tr>
              		<th scope="row">Niveau de batterie : </th>
              		<td>Larry</td>
            	</tr>
            	<tr>
              		<th scope="row">Date de la dernière donnée acquise : </th>
              		<td>Larry</td>
            	</tr>
            </table>
        	
        	
        	<table>
        		<td>
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                   		Dropdown link
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                    	<li><a class="dropdown-item" href="#">Humidité</a></li>
                    	<li><a class="dropdown-item" href="#">Température</a></li>
                    </ul>
                    
                   <!--  <a class="nav-link" href="#" data-toggle="collapse" aria-expanded="false" data-target="#submenu-11" aria-controls="submenu-11"></a>
                        <div id="submenu-11" class="collapse submenu" style="">
                        <ul class="nav flex-column">
                            <li class="nav-item">
                                <a class="nav-link" href="#">Humidité</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#">Température</a>
                            </li>
                        </ul>
                    </div> -->
        		</td>
        		<td>
        			<div class="graphDiv">
            			<img src="{{ asset('img/graphHumidTemp.png') }}" alt="graphHumidTemp" width="550px" height="340px">
            			<img src="{{ asset('img/graphTemp.png') }}" alt="graphHumidTemp" width="550px" height="340px">
                	</div>
        		</td>
        	</table>
        	
    		
        	
        	<button type="button" class="btn btn-light" id="syncButton">Sync</button>
        	<button type="button" class="btn btn-light" id="pingButton">Ping</button>
        	<!-- if(connected){
        		<span class="connected">Connecté</span>
        	}else{
        		<span class="disconnected">Déconnecté</span>
        	} -->
			        	
        </div>
    </div>
</div>

{% endblock %}

{% block script %}
	<script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/build/ol.js"></script>
	<script language="javascript">
        var tabX = []	
        var layer = null;
       /* act();
        var intervalId = setInterval(act,10000);
		*/
	  	
	 	function act(){
			$.get({
				url  : '{{ path('extract') }}',
       			dataType : 'json',
       			success : function(data){ 
       				if(layer != null){layer.getSource().clear();}
       				tabX.splice(0,tabX.length);
   					for(let i = 0; i < data.length; i++){
   						var long = data[i]['longitude'];
   						var lat = data[i]['latitude']
   						tabX.push(ol.proj.fromLonLat([long, lat]));
   					}	
				    layer = new ol.layer.Vector({
                   		source: new ol.source.Vector({
                  			features: [
                				new ol.Feature({
                      				geometry: new ol.geom.MultiPoint(tabX)
                    			}),
                  			]
                		})
                	});
                	map.addLayer(layer);     			
       			}	
	        });
		}
			
		var x = ol.proj.fromLonLat([1.3149833, 44.0315281]);
		
		layer = new ol.layer.Vector({
               		source: new ol.source.Vector({
              			features: [
            				new ol.Feature({
                  				geometry: new ol.geom.Point(x)
                			}),
              			]
            		})
            	});
            	
        var map = new ol.Map({
            layers: [
              new ol.layer.Tile({
                source: new ol.source.OSM({ maxZoom: 19 })
             })
            ],
            target: 
            	'map',
        		view: new ol.View({
        			center: 
        				ol.proj.fromLonLat([1.3149833, 44.0315281]),
        				maxZoom: 19,
        				zoom: 17
        		})
        });
        
        
        map.addLayer(layer);
        var container = document.getElementById('popup');
        var content = document.getElementById('popup-content');
        var closer = document.getElementById('popup-closer');
        
        /*var overlay = new ol.Overlay({
        	element: container,
            autoPan: true,
            autoPanAnimation: {
              duration: 250
            }
        });*/
        
        //map.addOverlay(overlay);
        
        /*closer.onclick = function() {
        	overlay.setPosition(undefined);
            closer.blur();
            return false;
        };*/
          
        map.on('singleclick', function (event) {
            if (map.hasFeatureAtPixel(event.pixel) === true) {
                $(".left").animate({width:"toggle"},{queue:false, duration:700 });
                $(".right").show();
                $(".right").animate({width:"+=50%"},{queue:false, duration:800 });   
          	} 
       });
       
        $('#returnButton').click(function(event)
        {
       		$(".left").show();
            $(".left").animate({width:"+=100%"},{queue:false, duration:800 });
            $(".right").animate({width:"toggle"},{queue:false, duration:700 });
            
        });	
	
	</script>
{% endblock %}